# 各个云的存储价格（存储每GB多少钱）
# [f'{(i / 1024 / 1024):.12f}' for i in [0.02,0.105,0.018,0.023,0.15,0.023]]
# > ['0.000000019073', '0.000000100136', '0.000000017166', '0.000000021935', '0.000000143051', '0.000000021935']
# [f'{(i / 1024 / 1024 / 1024)}' for i in [0.02,0.105,0.018,0.023,0.15,0.023]]
# > ['1.862645149230957e-11', '9.778887033462524e-11', '1.6763806343078612e-11', '2.1420419216156005e-11', '1.3969838619232177e-10', '2.1420419216156005e-11']
storage_cost: [0.02,0.105,0.018,0.023,0.15,0.023]

# 各个云的流量价格（流量每GB多少钱）
outbound_cost: [0.21,0.199,0.07,0.07,0.02,0.07]

# 各个云读流量的价格（每1000次）
read_cost: [0.004, 0, 0.0004, 0.0005, 0.0017, 0.0015]

# 各个云写流量的价格（写入每GB多少钱）
write_cost: [0.05, 0, 0.05, 0.0005, 0.0017, 0.0015]

# 云节点http服务的base_url, 拼接上/get,/put即是读写的endpoint
cloud_providers:
  - http://127.0.0.1:8080
  - http://127.0.0.1:8080
  - http://127.0.0.1:8080
  - http://127.0.0.1:8080

# 是否测试环境
debug: true

# 网络请求最大重试次数
max_retries: 3


# 测试矩阵，cloud_placements * data_size * read
network_test:
  matrix:
    cloud_placements:
      - [1,1,1,1]
    data_sizes:
      - 10240
      - 10485760
    reads:
      - true
      - false
  start_datetime: 2022-11-01 13:30:00
  end_datetime: 2022-11-02 13:30:00
  interval: 30
  N: 4
  k: 3
  n: 2
  intermediate_save_seconds: 1800

# 测试可视化
network_test_visualization:
  # 分组粒度，单位秒
  group_size: 300
  # 计算的百分位数值
  percentage_values: [50, 99]
  # x轴刻度数量
  xtick_size: 20
  
# 算法结果可视化
algorithm_visualization:
  # 比较的算法
  algorithms:
    - aw_cucb
    - simple
    - ewma
    - random
  # 算法比较指标
  metrics:
    - post_reward_accumulated_average
    - post_cost_accumulated_average
  # 是否显示为子图
  subplot: true
  # 是否统计节点请求数据
  node_statistics: true
  # 扩展指标, 不直接参与比较, 一般需要处理后才能使用
  extra_metrics: 
    - placement_policy
  